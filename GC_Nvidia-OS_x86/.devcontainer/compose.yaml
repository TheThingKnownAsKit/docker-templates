services:
  dev:
    runtime: nvidia
    build:
      context: ..                 # build context is the root workspace directory
      dockerfile: .devcontainer/Dockerfile
    image: REPOSITORY_NAME:latest  # tag the image (optional)
    container_name: CHANGEME
    # Mount the workspace into the container (for live development)
    volumes:
      - ../..:/workspace:rw    # Mount the project root (parent of .devcontainer) to /workspace in container
      - /tmp/.X11-unix:/tmp/.X11-unix:rw   # Mount X11 socket for GUI apps (Linux host)
    environment:
      - DISPLAY=${DISPLAY}         # Forward host X display (for GUI)
      - LIBGL_ALWAYS_SOFTWARE=1
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=all
    network_mode: host            # Use host networking for ROS 2 (enables multicast DDS discovery)
    tty: true
    stdin_open: true
    devices:
    - /dev/dri:/devi/dri          # This gives it access to all devices, which may not be desirable for you
    # For privileged camera / GPU nodes
    device_cgroup_rules:
      - 'c 195:* rmw'

  docker_git:
    image: alpine/git:latest      # Small image with git
    container_name: CHANGME
    volumes:
      - ~/.ssh:/root/.ssh:ro      # Mount host SSH keys (read-only)
      - ~/.gitconfig:/root/.gitconfig:ro  # Mount host Git config (read-only)
    network_mode: host            # share network (optional; not strictly needed for git)
    entrypoint: "/bin/sh"
    # This container is used on-demand for Git operations, e.g.:
    # `docker-compose run docker_git git push`
